// <auto-generated />
using ApplicationDataLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApplicationDataLibrary.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApplicationDataLibrary.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Lodi",
                            PersonId = 1,
                            State = "CA",
                            StreetAddress = "13066 Paddy Creek Ln",
                            ZipCode = 95240
                        },
                        new
                        {
                            Id = 2,
                            City = "Lodi",
                            PersonId = 2,
                            State = "CA",
                            StreetAddress = "13066 Paddy Creek Ln",
                            ZipCode = 95240
                        },
                        new
                        {
                            Id = 3,
                            City = "Lodi",
                            PersonId = 3,
                            State = "CA",
                            StreetAddress = "13066 Paddy Creek Ln",
                            ZipCode = 95240
                        });
                });

            modelBuilder.Entity("ApplicationDataLibrary.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("EmailAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "trigve.hagen@gmail.com",
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmailAddress = "trigve.hagen@gmail.com",
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            EmailAddress = "trigve.hagen@gmail.com",
                            PersonId = 3
                        });
                });

            modelBuilder.Entity("ApplicationDataLibrary.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Trigve",
                            LastName = "Hagen",
                            MemberType = 1,
                            Password = "xu2G3G679Ax7wvFWg1VE3YFlTz8lh9yoDZ+KnBz0M2U=",
                            Status = 1,
                            Username = "trigve1"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Trigve",
                            LastName = "Hagen",
                            MemberType = 2,
                            Password = "xu2G3G679Ax7wvFWg1VE3YFlTz8lh9yoDZ+KnBz0M2U=",
                            Status = 1,
                            Username = "trigve2"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Trigve",
                            LastName = "Hagen",
                            MemberType = 3,
                            Password = "xu2G3G679Ax7wvFWg1VE3YFlTz8lh9yoDZ+KnBz0M2U=",
                            Status = 1,
                            Username = "trigve3"
                        });
                });

            modelBuilder.Entity("ApplicationDataLibrary.Models.Address", b =>
                {
                    b.HasOne("ApplicationDataLibrary.Models.Person", null)
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApplicationDataLibrary.Models.Email", b =>
                {
                    b.HasOne("ApplicationDataLibrary.Models.Person", null)
                        .WithMany("EmailAddresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
